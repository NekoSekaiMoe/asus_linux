name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

jobs:
  build-deb-amd64:
    runs-on: ubuntu-22.04
    steps:
      - run: |
          df -h
          echo ---
          docker rmi -f $(docker images -q)
          aria2c -q https://raw.githubusercontent.com/Homebrew/install/master/uninstall.sh && NONINTERACTIVE=1 bash ./uninstall.sh -f -q
          sudo apt autopurge -y docker-buildx-plugin docker-ce-cli docker-ce containerd.io podman buildah skopeo containers-common kubectl temurin-*-jdk adoptopenjdk-* adoptium-ca-certificates openjdk-* ant ant-optional postgresql-* libpq-dev libmysqlclient* msodbcsql* mssql-tools unixodbc-dev mysql-client* mysql-common mysql-server* php*-*sql sphinxsearch mongodb* firefox google-chrome-stable microsoft-edge-stable xvfb apache2 apache2-* nginx nginx-* php-* php7* php8* session-manager-plugin azure-cli google-cloud-cli heroku gh subversion mercurial vim vim-* dotnet* aspnetcore* mono-* mono* libmono-* libmono* monodoc* msbuild nuget ruby* rake ri g++-9 g++-10 g++-12 gcc-9 gcc-10 gcc-12 gfortran-* clang-* libclang* llvm-* libllvm* lldb-* lld-* clang-format-* clang-tidy-* powershell r-base* r-cran* r-doc* r-recommended snapd man-db manpages libgtk-3-* ubuntu-mono *-icon-theme imagemagick imagemagick-6-common libgl1-mesa-dri firebird*
          sudo rm -rf /usr/share/swift /usr/share/miniconda /usr/local/lib/node_modules /usr/share/mysql* /usr/local/lib/android/ /usr/lib/jvm/ /home/linuxbrew
          echo ---
          df -h
             
      - name: Install Build Tools
        run: |
           sudo apt update && sudo apt install -y aria2 debhelper dpkg-dev build-essential patch bc bison flex libssl-dev libelf-dev git perl python3
                  
      - name: Checkout linux
        run: aria2c https://github.com/NekoSekaiMoe/asus_linux_debian_test/releases/download/v1/src.tar.xz && mkdir -p -v src && tar -xf src.tar.xz

      - name: Ccache for gh actions
        uses: hendrikmuhs/ccache-action@v1.2.13
        with:
          max-size: 8192M
          key: ee2b31d23ae6068c6aecc2e81e4b71c40ed72654

      - name: Configure
        env:
          CC: "ccache gcc"
          CXX: "ccache g++"
          AR: "ccache ar"
        run: |
          cd src
          export USE_CCACHE=1
          cp arch/x86/configs/asus_defconfig .config
          #make asus_defconfig
          bash config.sh
          make olddefconfig bindeb-pkg -j8

      #- name: build
      #  env:
      #    CC: "ccache gcc"
      #    CXX: "ccache g++"
      #    AR: "ccache ar"
      #  run: |
      #    cd src
      #    export USE_CCACHE=1
      #    make -j8 bindeb-pkg
          
      - name: Upload deb
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: ./*.deb
